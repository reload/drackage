<?php

/**
 * @file
 * Searches packagist.org for Drush packages.
 */

use Drupal\Component\Datetime\DateTimePlus;

/**
 * Implements hook_permission().
 */
function drackage_permission() {
  $perms = array(
    'view drush packages' => array(
      'title' => t('Search and view Drush packages'),
    ),
  );

  return $perms;
}

/**
 * Implements hook_theme().
 */
function drackage_theme() {
  return array(
    'drush_package' => array(
      'variables' => array('package-json' => NULL),
      'template' => 'drush-package',
    ),
    'drush_package_teaser' => array(
      'variables' => array('package' => NULL),
      'template' => 'drush-package-teaser',
    ),
    'drush_package_version' => array(
      'variables' => array('version-json' => NULL),
      'template' => 'drush-package-version',
    ),
  );
}

/**
 * Prepares variables for Drush package template.
 *
 * Default template: drush-package.html.twig.
 */
function template_preprocess_drush_package(&$vars) {
  $json = $vars['package-json'];
  $vars['name'] = check_plain($json['name']);
  $vars['description'] = check_plain($json['description']);
  $vars['versions'] = array();
  foreach ($json['versions'] as $version) {
    $vars['versions'][] = array(
      '#theme' => 'drush_package_version',
      '#version-json' => $version,
    );
  }
}

/**
 * Prepares variables for Drush package teaser template.
 *
 * Default template: drush-package-teaser.html.twig.
 */
function template_preprocess_drush_package_teaser(&$vars) {
  list($vendor, $package) = explode('/', $vars['package']['name'], 2);
  $route_parameters = array('vendor' => $vendor, 'package' => $package);
  $vars['name'] = Drupal::l($vars['package']['name'], 'drackage.package_page', $route_parameters);
  $vars['description'] = $vars['package']['description'];
  $vars['downloads'] = $vars['package']['downloads'];
}

/**
 * Prepares variables for Drush package version template.
 *
 * Default template: drush-package-version.html.twig.
 */
function template_preprocess_drush_package_version(&$vars) {
  $json = $vars['version-json'];
  $vars['version'] = check_plain($json['version']);
  $vars['description'] = check_plain($json['description']);
  $vars['install_command'] = 'cd ~/.drush && composer require ' . check_plain($json['name']) . ':' . check_plain($json['version']);
  // Using @ to suppress a warning in DateTimePlus for now: Warning:
  // DateTime::setTimezone(): Can only do this for zones with ID for now in
  // /var/www/drush-packages/core/lib/Drupal/Component/Datetime/DateTimePlus.php
  // on line 256
  $time = @DateTimePlus::createFromFormat('Y-m-d\TH:i:sP', $json['time']);
  // Converting to timestamp and using format_date in order to use the
  // configured timezone.
  $timestamp = $time->format('U');
  $vars['time'] = format_date($timestamp, 'medium');
}
